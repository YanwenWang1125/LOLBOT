name: Deploy LOLBOT to Azure Container App

on:
  push:
    branches:
      - main

env:
  AZURE_CONTAINERAPP_NAME: lolbot
  AZURE_RESOURCE_GROUP: rg-lolbot
  ACR_NAME: lolbotregistry123
  IMAGE_NAME: lolbot

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 🧱 Step 1: 检出代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 🔐 Step 2: 登录到 Azure
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 🧰 Step 3: 登录到 ACR
      - name: Azure Container Registry Login
        run: az acr login --name $ACR_NAME

      # 🧩 Step 4: 构建并推送镜像
      - name: Build and Push Docker image
        run: |
          IMAGE_TAG=${{ github.run_number }}
          docker build -t $ACR_NAME.azurecr.io/$IMAGE_NAME:$IMAGE_TAG .
          docker push $ACR_NAME.azurecr.io/$IMAGE_NAME:$IMAGE_TAG
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      # 🚀 Step 5: 更新 Azure Container App
      - name: Update Azure Container App
        run: |
          az containerapp update \
            -n $AZURE_CONTAINERAPP_NAME \
            -g $AZURE_RESOURCE_GROUP \
            --image $ACR_NAME.azurecr.io/$IMAGE_NAME:${{ env.IMAGE_TAG }} \
            --set-env-vars \
              RIOT_API_KEY="${{ secrets.RIOT_API_KEY }}" \
              OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
              DISCORD_TOKEN="${{ secrets.DISCORD_TOKEN }}" \
              VOICV_API_KEY="${{ secrets.VOICV_API_KEY }}" \
              GAME_NAME="${{ secrets.GAME_NAME }}" \
              TAG_LINE="${{ secrets.TAG_LINE }}" \
              REGION="${{ secrets.REGION }}" \
              REGION_ROUTE="${{ secrets.REGION_ROUTE }}"

      # ✅ Step 6: 验证部署
      - name: Verify deployment
        run: |
          echo "🚀 部署完成！"
          echo "镜像: $ACR_NAME.azurecr.io/$IMAGE_NAME:${{ env.IMAGE_TAG }}"
          echo "容器应用: $AZURE_CONTAINERAPP_NAME"
          echo "资源组: $AZURE_RESOURCE_GROUP"
